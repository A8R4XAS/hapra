$date
  Fri Dec 11 15:16:58 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module mux81_tb $end
$var reg 3 ! i1_81[2:0] $end
$var reg 3 " i2_81[2:0] $end
$var reg 3 # i3_81[2:0] $end
$var reg 3 $ i4_81[2:0] $end
$var reg 3 % i5_81[2:0] $end
$var reg 3 & i6_81[2:0] $end
$var reg 3 ' i7_81[2:0] $end
$var reg 3 ( i8_81[2:0] $end
$var reg 3 ) sel_81[2:0] $end
$var reg 3 * y_81[2:0] $end
$scope module multiplex $end
$var reg 3 + i1_81[2:0] $end
$var reg 3 , i2_81[2:0] $end
$var reg 3 - i3_81[2:0] $end
$var reg 3 . i4_81[2:0] $end
$var reg 3 / i5_81[2:0] $end
$var reg 3 0 i6_81[2:0] $end
$var reg 3 1 i7_81[2:0] $end
$var reg 3 2 i8_81[2:0] $end
$var reg 3 3 sel_81[2:0] $end
$var reg 3 4 y_81[2:0] $end
$var reg 3 5 y_mux0[2:0] $end
$var reg 3 6 y_mux1[2:0] $end
$var reg 2 7 sel_mux[1:0] $end
$var reg 3 8 a_out0[2:0] $end
$var reg 3 9 a_out1[2:0] $end
$var reg 3 : or_out[2:0] $end
$var reg 1 ; sel_2_neg $end
$scope module mux41_0 $end
$var reg 3 < i1[2:0] $end
$var reg 3 = i2[2:0] $end
$var reg 3 > i3[2:0] $end
$var reg 3 ? i4[2:0] $end
$var reg 2 @ sel[1:0] $end
$var reg 3 A y[2:0] $end
$var reg 2 B not_sel[1:0] $end
$var reg 3 C a_out1[2:0] $end
$var reg 3 D a_out2[2:0] $end
$var reg 3 E a_out3[2:0] $end
$var reg 3 F a_out4[2:0] $end
$var reg 3 G o_out[2:0] $end
$scope module not_output0 $end
$var reg 1 H input $end
$var reg 1 I not_result $end
$var reg 1 J not_gate $end
$upscope $end
$scope module not_output1 $end
$var reg 1 K input $end
$var reg 1 L not_result $end
$var reg 1 M not_gate $end
$upscope $end
$scope module and_gate_assignment(0) $end
$scope module and_output1 $end
$var reg 1 N input1 $end
$var reg 1 O input2 $end
$var reg 1 P input3 $end
$var reg 1 Q and_result $end
$var reg 1 R and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 S input1 $end
$var reg 1 T input2 $end
$var reg 1 U input3 $end
$var reg 1 V and_result $end
$var reg 1 W and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 X input1 $end
$var reg 1 Y input2 $end
$var reg 1 Z input3 $end
$var reg 1 [ and_result $end
$var reg 1 \ and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 ] input1 $end
$var reg 1 ^ input2 $end
$var reg 1 _ input3 $end
$var reg 1 ` and_result $end
$var reg 1 a and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(1) $end
$scope module and_output1 $end
$var reg 1 b input1 $end
$var reg 1 c input2 $end
$var reg 1 d input3 $end
$var reg 1 e and_result $end
$var reg 1 f and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 g input1 $end
$var reg 1 h input2 $end
$var reg 1 i input3 $end
$var reg 1 j and_result $end
$var reg 1 k and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 l input1 $end
$var reg 1 m input2 $end
$var reg 1 n input3 $end
$var reg 1 o and_result $end
$var reg 1 p and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 q input1 $end
$var reg 1 r input2 $end
$var reg 1 s input3 $end
$var reg 1 t and_result $end
$var reg 1 u and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(2) $end
$scope module and_output1 $end
$var reg 1 v input1 $end
$var reg 1 w input2 $end
$var reg 1 x input3 $end
$var reg 1 y and_result $end
$var reg 1 z and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 { input1 $end
$var reg 1 | input2 $end
$var reg 1 } input3 $end
$var reg 1 !" and_result $end
$var reg 1 "" and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 #" input1 $end
$var reg 1 $" input2 $end
$var reg 1 %" input3 $end
$var reg 1 &" and_result $end
$var reg 1 '" and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 (" input1 $end
$var reg 1 )" input2 $end
$var reg 1 *" input3 $end
$var reg 1 +" and_result $end
$var reg 1 ," and_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(0) $end
$scope module or_output $end
$var reg 1 -" input1 $end
$var reg 1 ." input2 $end
$var reg 1 /" input3 $end
$var reg 1 0" input4 $end
$var reg 1 1" or_result $end
$var reg 1 2" or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(1) $end
$scope module or_output $end
$var reg 1 3" input1 $end
$var reg 1 4" input2 $end
$var reg 1 5" input3 $end
$var reg 1 6" input4 $end
$var reg 1 7" or_result $end
$var reg 1 8" or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(2) $end
$scope module or_output $end
$var reg 1 9" input1 $end
$var reg 1 :" input2 $end
$var reg 1 ;" input3 $end
$var reg 1 <" input4 $end
$var reg 1 =" or_result $end
$var reg 1 >" or_gate $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux41_1 $end
$var reg 3 ?" i1[2:0] $end
$var reg 3 @" i2[2:0] $end
$var reg 3 A" i3[2:0] $end
$var reg 3 B" i4[2:0] $end
$var reg 2 C" sel[1:0] $end
$var reg 3 D" y[2:0] $end
$var reg 2 E" not_sel[1:0] $end
$var reg 3 F" a_out1[2:0] $end
$var reg 3 G" a_out2[2:0] $end
$var reg 3 H" a_out3[2:0] $end
$var reg 3 I" a_out4[2:0] $end
$var reg 3 J" o_out[2:0] $end
$scope module not_output0 $end
$var reg 1 K" input $end
$var reg 1 L" not_result $end
$var reg 1 M" not_gate $end
$upscope $end
$scope module not_output1 $end
$var reg 1 N" input $end
$var reg 1 O" not_result $end
$var reg 1 P" not_gate $end
$upscope $end
$scope module and_gate_assignment(0) $end
$scope module and_output1 $end
$var reg 1 Q" input1 $end
$var reg 1 R" input2 $end
$var reg 1 S" input3 $end
$var reg 1 T" and_result $end
$var reg 1 U" and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 V" input1 $end
$var reg 1 W" input2 $end
$var reg 1 X" input3 $end
$var reg 1 Y" and_result $end
$var reg 1 Z" and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 [" input1 $end
$var reg 1 \" input2 $end
$var reg 1 ]" input3 $end
$var reg 1 ^" and_result $end
$var reg 1 _" and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 `" input1 $end
$var reg 1 a" input2 $end
$var reg 1 b" input3 $end
$var reg 1 c" and_result $end
$var reg 1 d" and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(1) $end
$scope module and_output1 $end
$var reg 1 e" input1 $end
$var reg 1 f" input2 $end
$var reg 1 g" input3 $end
$var reg 1 h" and_result $end
$var reg 1 i" and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 j" input1 $end
$var reg 1 k" input2 $end
$var reg 1 l" input3 $end
$var reg 1 m" and_result $end
$var reg 1 n" and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 o" input1 $end
$var reg 1 p" input2 $end
$var reg 1 q" input3 $end
$var reg 1 r" and_result $end
$var reg 1 s" and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 t" input1 $end
$var reg 1 u" input2 $end
$var reg 1 v" input3 $end
$var reg 1 w" and_result $end
$var reg 1 x" and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(2) $end
$scope module and_output1 $end
$var reg 1 y" input1 $end
$var reg 1 z" input2 $end
$var reg 1 {" input3 $end
$var reg 1 |" and_result $end
$var reg 1 }" and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 !# input1 $end
$var reg 1 "# input2 $end
$var reg 1 ## input3 $end
$var reg 1 $# and_result $end
$var reg 1 %# and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 &# input1 $end
$var reg 1 '# input2 $end
$var reg 1 (# input3 $end
$var reg 1 )# and_result $end
$var reg 1 *# and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 +# input1 $end
$var reg 1 ,# input2 $end
$var reg 1 -# input3 $end
$var reg 1 .# and_result $end
$var reg 1 /# and_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(0) $end
$scope module or_output $end
$var reg 1 0# input1 $end
$var reg 1 1# input2 $end
$var reg 1 2# input3 $end
$var reg 1 3# input4 $end
$var reg 1 4# or_result $end
$var reg 1 5# or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(1) $end
$scope module or_output $end
$var reg 1 6# input1 $end
$var reg 1 7# input2 $end
$var reg 1 8# input3 $end
$var reg 1 9# input4 $end
$var reg 1 :# or_result $end
$var reg 1 ;# or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(2) $end
$scope module or_output $end
$var reg 1 <# input1 $end
$var reg 1 =# input2 $end
$var reg 1 ># input3 $end
$var reg 1 ?# input4 $end
$var reg 1 @# or_result $end
$var reg 1 A# or_gate $end
$upscope $end
$upscope $end
$upscope $end
$scope module not_output0 $end
$var reg 1 B# input $end
$var reg 1 C# not_result $end
$var reg 1 D# not_gate $end
$upscope $end
$scope module and_gate_assignment(0) $end
$scope module and_output0 $end
$var reg 1 E# input1 $end
$var reg 1 F# input2 $end
$var reg 1 G# and_result $end
$var reg 1 H# and_gate $end
$upscope $end
$scope module and_output1 $end
$var reg 1 I# input1 $end
$var reg 1 J# input2 $end
$var reg 1 K# and_result $end
$var reg 1 L# and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(1) $end
$scope module and_output0 $end
$var reg 1 M# input1 $end
$var reg 1 N# input2 $end
$var reg 1 O# and_result $end
$var reg 1 P# and_gate $end
$upscope $end
$scope module and_output1 $end
$var reg 1 Q# input1 $end
$var reg 1 R# input2 $end
$var reg 1 S# and_result $end
$var reg 1 T# and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(2) $end
$scope module and_output0 $end
$var reg 1 U# input1 $end
$var reg 1 V# input2 $end
$var reg 1 W# and_result $end
$var reg 1 X# and_gate $end
$upscope $end
$scope module and_output1 $end
$var reg 1 Y# input1 $end
$var reg 1 Z# input2 $end
$var reg 1 [# and_result $end
$var reg 1 \# and_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(0) $end
$scope module or_output $end
$var reg 1 ]# input1 $end
$var reg 1 ^# input2 $end
$var reg 1 _# or_result $end
$var reg 1 `# or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(1) $end
$scope module or_output $end
$var reg 1 a# input1 $end
$var reg 1 b# input2 $end
$var reg 1 c# or_result $end
$var reg 1 d# or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(2) $end
$scope module or_output $end
$var reg 1 e# input1 $end
$var reg 1 f# input2 $end
$var reg 1 g# or_result $end
$var reg 1 h# or_gate $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b000 !
b001 "
b010 #
b011 $
b100 %
b101 &
b110 '
b111 (
b000 )
b000 *
b000 +
b001 ,
b010 -
b011 .
b100 /
b101 0
b110 1
b111 2
b000 3
b000 4
b000 5
b100 6
b00 7
b000 8
b000 9
b000 :
1;
b000 <
b001 =
b010 >
b011 ?
b00 @
b000 A
b11 B
b000 C
b000 D
b000 E
b000 F
bUUU G
0H
1I
1J
0K
1L
1M
1N
1O
0P
0Q
0R
1S
0T
1U
0V
0W
0X
1Y
0Z
0[
0\
0]
0^
1_
0`
0a
1b
1c
0d
0e
0f
1g
0h
0i
0j
0k
0l
1m
1n
0o
0p
0q
0r
1s
0t
0u
1v
1w
0x
0y
0z
1{
0|
0}
0!"
0""
0#"
1$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
b100 ?"
b101 @"
b110 A"
b111 B"
b00 C"
b100 D"
b11 E"
b100 F"
b000 G"
b000 H"
b000 I"
bUUU J"
0K"
1L"
1M"
0N"
1O"
1P"
1Q"
1R"
0S"
0T"
0U"
1V"
0W"
1X"
0Y"
0Z"
0["
1\"
0]"
0^"
0_"
0`"
0a"
1b"
0c"
0d"
1e"
1f"
0g"
0h"
0i"
1j"
0k"
0l"
0m"
0n"
0o"
1p"
1q"
0r"
0s"
0t"
0u"
1v"
0w"
0x"
1y"
1z"
1{"
1|"
1}"
1!#
0"#
1##
0$#
0%#
0&#
1'#
1(#
0)#
0*#
0+#
0,#
1-#
0.#
0/#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
1<#
0=#
0>#
0?#
1@#
1A#
0B#
1C#
1D#
0E#
1F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
1N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
1V#
0W#
0X#
1Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
#10000000
b010 )
b010 *
b010 3
b010 4
b010 5
b110 6
b10 7
b010 8
b010 :
b10 @
b010 A
b01 B
b010 E
1K
0L
0M
0N
0S
1X
1]
0b
0g
1l
1o
1p
1q
0v
0{
1#"
1("
15"
17"
18"
b10 C"
b110 D"
b01 E"
b000 F"
b110 H"
1N"
0O"
0P"
0Q"
0V"
1["
1`"
0e"
0j"
1o"
1r"
1s"
1t"
0y"
0|"
0}"
0!#
1&#
1)#
1*#
1+#
18#
1:#
1;#
0<#
1>#
1M#
1O#
1P#
1Q#
1a#
1c#
1d#
#20000000
b001 )
b001 *
b001 3
b001 4
b001 5
b101 6
b01 7
b001 8
b001 :
b01 @
b001 A
b10 B
b001 D
b000 E
1H
0I
0J
0K
1L
1M
1N
0O
1S
1T
1V
1W
0X
0Y
0]
1^
1b
0c
1g
1h
0l
0m
0o
0p
0q
1r
1v
0w
1{
1|
0#"
0$"
0("
1)"
1."
11"
12"
05"
07"
08"
b01 C"
b101 D"
b10 E"
b101 G"
b000 H"
1K"
0L"
0M"
0N"
1O"
1P"
1Q"
0R"
1V"
1W"
1Y"
1Z"
0["
0\"
0`"
1a"
1e"
0f"
1j"
1k"
0o"
0p"
0r"
0s"
0t"
1u"
1y"
0z"
1!#
1"#
1$#
1%#
0&#
0'#
0)#
0*#
0+#
1,#
11#
14#
15#
08#
0:#
0;#
1=#
0>#
1@#
1A#
1E#
1G#
1H#
1I#
0M#
0O#
0P#
0Q#
1Y#
1]#
1_#
1`#
0a#
0c#
0d#
#30000000
b011 )
b011 *
b011 3
b011 4
b011 5
b111 6
b11 7
b011 8
b011 :
b11 @
b011 A
b00 B
b000 D
b011 F
1K
0L
0M
0N
0S
0V
0W
1X
1]
1`
1a
0b
0g
1l
1q
1t
1u
0v
0{
1#"
1("
0."
10"
16"
17"
18"
b11 C"
b111 D"
b00 E"
b000 G"
b111 I"
1N"
0O"
0P"
0Q"
0V"
0Y"
0Z"
1["
1`"
1c"
1d"
0e"
0j"
1o"
1t"
1w"
1x"
0y"
0!#
0$#
0%#
1&#
1+#
1.#
1/#
01#
13#
19#
1:#
1;#
0=#
1?#
1M#
1O#
1P#
1Q#
1a#
1c#
1d#
#40000000
b100 )
b100 *
b100 3
b100 4
b000 5
b100 6
b00 7
b000 8
b100 9
b100 :
0;
b00 @
b000 A
b11 B
b000 F
0H
1I
1J
0K
1L
1M
1N
1O
1S
0T
0X
1Y
0]
0^
0`
0a
1b
1c
1g
0h
0l
1m
0q
0r
0t
0u
1v
1w
1{
0|
0#"
1$"
0("
0)"
00"
01"
02"
06"
07"
08"
b00 C"
b100 D"
b11 E"
b100 F"
b000 I"
0K"
1L"
1M"
0N"
1O"
1P"
1Q"
1R"
1V"
0W"
0["
1\"
0`"
0a"
0c"
0d"
1e"
1f"
1j"
0k"
0o"
1p"
0t"
0u"
0w"
0x"
1y"
1z"
1|"
1}"
1!#
0"#
0&#
1'#
0+#
0,#
0.#
0/#
03#
04#
05#
09#
0:#
0;#
1<#
0?#
1@#
1A#
1B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
1J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
1R#
0S#
0T#
0V#
1Y#
1Z#
1[#
1\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
1f#
1g#
1h#
#50000000
b110 )
b110 *
b110 3
b110 4
b010 5
b110 6
b10 7
b110 9
b110 :
b10 @
b010 A
b01 B
b010 E
1K
0L
0M
0N
0S
1X
1]
0b
0g
1l
1o
1p
1q
0v
0{
1#"
1("
15"
17"
18"
b10 C"
b110 D"
b01 E"
b000 F"
b110 H"
1N"
0O"
0P"
0Q"
0V"
1["
1`"
0e"
0j"
1o"
1r"
1s"
1t"
0y"
0|"
0}"
0!#
1&#
1)#
1*#
1+#
18#
1:#
1;#
0<#
1>#
1M#
1Q#
1S#
1T#
1b#
1c#
1d#
#60000000
b101 )
b101 *
b101 3
b101 4
b001 5
b101 6
b01 7
b101 9
b101 :
b01 @
b001 A
b10 B
b001 D
b000 E
1H
0I
0J
0K
1L
1M
1N
0O
1S
1T
1V
1W
0X
0Y
0]
1^
1b
0c
1g
1h
0l
0m
0o
0p
0q
1r
1v
0w
1{
1|
0#"
0$"
0("
1)"
1."
11"
12"
05"
07"
08"
b01 C"
b101 D"
b10 E"
b101 G"
b000 H"
1K"
0L"
0M"
0N"
1O"
1P"
1Q"
0R"
1V"
1W"
1Y"
1Z"
0["
0\"
0`"
1a"
1e"
0f"
1j"
1k"
0o"
0p"
0r"
0s"
0t"
1u"
1y"
0z"
1!#
1"#
1$#
1%#
0&#
0'#
0)#
0*#
0+#
1,#
11#
14#
15#
08#
0:#
0;#
1=#
0>#
1@#
1A#
1E#
1I#
1K#
1L#
0M#
0Q#
0S#
0T#
1Y#
1[#
1\#
1^#
1_#
1`#
0b#
0c#
0d#
1f#
1g#
1h#
#70000000
b111 )
b111 *
b111 3
b111 4
b011 5
b111 6
b11 7
b111 9
b111 :
b11 @
b011 A
b00 B
b000 D
b011 F
1K
0L
0M
0N
0S
0V
0W
1X
1]
1`
1a
0b
0g
1l
1q
1t
1u
0v
0{
1#"
1("
0."
10"
16"
17"
18"
b11 C"
b111 D"
b00 E"
b000 G"
b111 I"
1N"
0O"
0P"
0Q"
0V"
0Y"
0Z"
1["
1`"
1c"
1d"
0e"
0j"
1o"
1t"
1w"
1x"
0y"
0!#
0$#
0%#
1&#
1+#
1.#
1/#
01#
13#
19#
1:#
1;#
0=#
1?#
1M#
1Q#
1S#
1T#
1b#
1c#
1d#
#80000000
